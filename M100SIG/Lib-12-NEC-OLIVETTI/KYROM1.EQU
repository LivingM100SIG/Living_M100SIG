KYROM1.EQU
----------

Copyright 1987 -- P.C. Wheeler

This is from the front end of one of my (successful!) ASM files for
the KC-85.  More data will follow as I accumulate it, hopefully with
more structure.
;
;ROM equates for Kyo-85 (M100 vals in comments in parens)
;
CLRFNK	EQU	$5784	;($5A79) clr f-key tbl
MOV1	EQU	$576D	;($5A62) DE --> HL
LOCK	EQU	$421B	;($423F) scroll lock
CLS	EQU	$420D	;($4231) clear screen
DSPFIL	EQU	$567D	;($5970) dsp fil on mnu
SETCRS	EQU	$56D6	;($59C9) set cursor mnu
EMPTY	EQU	$5825	;($5B1A) '-.-' msg
PRTSTR	EQU	$5763	;($5A58) string to lcd
SETCUR	EQU	$4258	;($427C) set curs posit
FREMEM	EQU	$7B5C	;($7EAC) free bytes
SHOWTD	EQU	$5A78	;($5D70) time-date
KYREAD	EQU	$6EF2	;($7242) scn kbd
BEEP	EQU	$4205	;($4229) beep
MENU	EQU	$54A4	;($5797) menu
ROM2	EQU	$55D0	;($58C3) unk
ROM5	EQU	$55F8	;($58EB) unk
ROM4	EQU	$55EF	;($58E2) unk
ROM3	EQU	$55E8	;($58DB) unk
ROM1	EQU	$55C3	;($58B6) unk
SETSER	EQU	$17C8	;($17E6) com on
SPCMSG	EQU	$5C53	;($5F4B) '..Space Bar.'
WTSPC	EQU	$5C37	;($5F2F) wait space bar
SETINT	EQU	$730A	;($765C) set int to 1Dh
RCVX	EQU	$6A75	;($6D6D) ck rs for char
RV232C	EQU	$6A86	;($6D7E) chr fm rcv que
SD232C	EQU	$6B3A	;($6E32) snd w x-on-off
PRTINT	EQU	$39AD	;($39D4) prt 16 bit int
CRLF	EQU	$41FE	;($4222) prt crlf
MPYINT	EQU	$36FE	;($3725) mpy signd int
FREMSG	EQU	$7C48	;($7F98) 'bytes free'
ADDR2	EQU	$57EF	;($5AE4) file ads + 1
ADDR	EQU	$57EE	;($5AE3) get file ads
ERAEOL	EQU	$4239	;($425D) erase to eol
INLIN	EQU	$45F8	;($4644) get kbd line
ROM6	EQU	$05FA	;($05F3) unk
ROM7	EQU	$207A	;($20A9) unk
DELCHR	EQU	$68A7	;($6B9F) delete char
ROM8	EQU	$2104	;($2134) unk
ROM9	EQU	$2119	;($2146) unk
KILTX2	EQU	$1F90	;($1FBF) kill file + 1
ROM10	EQU	$1FAA	;($1FD9) unk
ROM11	EQU	$1FE8	;($2017) unk
MAKHOL	EQU	$6875	;($6B6D) ins spaces
ROM12	EQU	$4DD8	;($4E22) unk
ROM13	EQU	$2211	;($2239) unk
GETCH	EQU	$12D4	;($12CB) wait for chr
TOUPR	EQU	$0FF0	;($0FE9) lc to uc
ROM14	EQU	$56F2	;($59E5) unk
ROM15	EQU	$209D	;($20CC) unk
;
;RAM equates
;
CSRY	EQU	$F640	;($F639) Hor curs posit
CSRX	EQU	$F641	;($F63A) Ver curs posit
ERROR	EQU	$F659	;($F652) Bas error trap
STAT	EQU	$F662	;($F65B) Comm stat
LINENO	EQU	$F681	;($F67A) FFFF if no pgm
LINBUF	EQU	$F68C	;($F685) Bfr for kb lin
UNSAV	EQU	$F98B	;($F99A) Unsav BA addr
EDITBA	EQU	$F9A0	;($F9AF) edit attr byte
LBLON	EQU	$FAB4	;($FAAD) lbl lin enable
RAM1	EQU	$FAD4	;($FACE) unknown
RAM2	EQU	$FADE	;($FAD8) unknown
STDO	EQU	$FBC0	;($FBAE) strt DO store
STCO	EQU	$FBC2	;($FBB0) strt CO store
TOPFIL	EQU	$FBC4	;($FBB2) end of top fil
STAR	EQU	$FBC6	;($FBB4) strt arr store
STUN	EQU	$FBC8	;($FBB6) 1st unusd byte
CURBA	EQU	$FCA5	;($FC93) current BA pgm
RAM3	EQU	$FCB9	;($FCA7) unknown
ALT1	EQU	$FDA1	;($FDA1) BEGALT + E1h
ALT2	EQU	$FDD7	;($FDD7) BEGALT + 117h
ALT3	EQU	$FDEE	;($FDEE) BEGALT + 12Eh
ALT4	EQU	$FDEF	;($FDEF) BEGALT + 12Fh
KBUFN	EQU	$FF6B	;($FFAA) chrs in kb buf

Phil Wheeler -- 71266,125
7/27/87
