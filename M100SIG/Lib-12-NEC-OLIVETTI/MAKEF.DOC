F.CO is a machine language program that displays the valid files in a bank of
RAM, even showing invisible files.  It allows you to select one of them to see
its length.  Curser movement is supported, including "wrap around" in
horizontal and vertical directions.  To understand that, you really must try
it!  Also, you can make any of your files invisible to the main menu.  The
only way to use an invisible file is to use "F.CO" to make it visible.  Be
careful, though...if you make "F.CO" invisible, how will you get it back?
More on this later.

Much of the code here was generated with the help of various individuals
and firms.  Thanks to Chuck Laws for the .DO length code, and many comments.
CUSTOM SOFTWARE provided some of the basic code and much ROM information
in their fine assembler documentation. Lastly, the NEC Technical manual
provided both code and valuable ROM information.

The original idea for this program came from Traveling Software.  They provided
a memory manager program with "Traveling Writer".  I used it, and decided to
improve its speed, display, and size.  I think I did.

The source code file is almost 13K bytes long.  Early versions were assembled
with the CUSTOM SOFTWARE assembler, and debugged with CUSTOM's CBUG but
this version was written with the Polar Engineering and Consulting ROM 2
assembler / debugger.

F.CO is uploaded as a .DO file.  It is a .BA program stored in ASCII format by
the name of 'makeF.DO'.  To use it:

  1.  Load it from cassette or RS232
  2.  Go into BASIC and Load "makeF.DO"
  3.  RUN the program

 "makeF.DO" was made with H. Michael Sarna's "COTOBA" program available in
this data library.  It loads at 61540 and takes about 795 bytes of memory.

If you have any comments, questions, or suggestions, please send me an Easyplex
message.  I am taking suggestions on how to improve "F.CO" and, especially,
what features would be nice to have. "F.CO" can easily be modified to do
things, since when a file is selected on the LCD, its attribute byte is in
the accumulator [A], [HL] points to its directory entry address, and [DE]
points to the file location itself. For example, RENAME, KILL and RUN would
be easy to implement, but we NECers (unlike the M100ers) already can do all
of that!

If you do make "F.CO" invisible, 'EXEC61540' (the beginning address of
F.CO) from BASIC, if you haven't used another machine language file.

		Barry E. Rowe
		[75106,3463]
