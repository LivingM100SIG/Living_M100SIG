Fm: james alder 75776,3061

Seems to be a lot of interest in the internals of the new DD, an interest I
share avidly. So far I haven't taken mine apart (will do so today I suspect)
but here's what i know so far.

The internal controller has a Hitachi microprocessor, the HD63A01V1. This is
in the schematic. I found a spec sheet for this that I got some time ago. the
chip is similar hardware-wise to the Z8 in the buss structure and the fact that
it has ROM on the chip. I'm guessing 8K. (The spec sheet I have is for the
prototype version that allows for the piggybacking of 4 or 8K, so I assume the
mask programmable version has 8K ROM) Judging by the address lines, it has a
2K RAM chip, tho I haven't found the specs on it yet.

Not much else to the controller but the interface to the head and a baud rate
generator. The RS232 is generated by the CPU chip just like the Z8 does. Hope
this gets the ball rolling. I don't see any reason why you can't access files
just like on tape. All we need are the codes sent to the drive by DOS. We
shall see!


---- Update: 10/29

I hooked up a line analyzer between the M100 amd drive today (one of the
benefits of working at the Space Center is you have access to some impressive
test equipment). The codes going between the drive and CPU are NOT complicated.
I'm not sure you can generate signals in BASIC fast enough for 19,200 baud but
I'll know more when I decode the hex dumps.

Also it would seem simple enough to call the routines in floppy.co if we knew
where they were. Hate to admit it, but my knowledge of machine language is
almost non-existent. Tried a dis-assembly (entry point is 59400) but no real
progress. I'm afraid hardware is my long suit, not SW.

More follows as I get into it. Any help
from the ML buffs is welcome.


----- Update: 10/30

I've been working on the new drive and so far just bits and pieces. I took it
apart and don't recommend that, as it comes apart easier than it goes back
together. The hardware is excellent - surface mount ICs all thru ("state of
the art" to you cliche fans).

I've disassembled the DOS (floppy.co) and it is mostly ascii - screens and
menus.  Haven't really gotten far on the decoding but I have a couple of
exchanges between the 100 and drive thanks to a line analyzer at work. For
you experts in SW, heres the dialogue for sending a .do file to the disk:

100: 5A 5A 07 00 F8 0D
Drive: 12 01 00 EC

100: 5A 5A 00 1A then the title, extension and 15 spaces (20) 46 00 6C
Drive: 11 1C then 27 nulls (00) 32 A0

100: 5A 5A 01 01 01 FC
Drive: 12 01 00 EC

100: 5A 5A 04 34 then the first line, a cr and lf, then the second line and
  cr and lf, and a 36
Drive: 12 01 00 EC

That's the entire exchange. If it'll help, the .do file was a simple;

10 rem"ABCDEFGHIJKLMNOP"
20 rem"abcdefghijklmnop"

More will follow when I get my hands on the equipment at work again.

I eagerly await someone else jumping in to this investigation.

