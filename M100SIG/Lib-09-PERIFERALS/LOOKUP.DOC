LOOKUP.BA

  LOOKUP.BA takes off where SPLCHK.BA leaves off. LOOKUP takes the words from 
the SUSPEC.DO file, that SPLCHK.BA leaves behind, lets you correct them and 
then rewrites the text file, making the corrections. LOOKUP.BA will open up two
new files FIXTXT.DO and ADDICT.DO while it is working. If you already have a 
file in ram with one of these names it will be appended. Also SUSPECT and 
FIXTXT will be killed. SUSPECT becomes the temporary text file and FIXTXT isn't
needed after LOOKUP is finished. (If you will be using ADDICT.BA to add the new
words to the dictionary, change 'SUSPECT' to 'ADDICT' in Lines 1 & 3 of 
ADDICT.BA.)
  When you first run LOOKUP.BA it will check the position of the CAPS LOCK key,
since ALL inputs should be in lowercase. If you are reading this in uppercase 
GO DEFAULT and change your setting to upper and lower case before downloading 
the program.
  Next you'll be asked for the file name of the text file you're working with. 
The file is assumed to be on a disk, so do not add the ':' at the beginning or 
the '.DO' extension. You will be told when to put the disk with the text file 
in the drive.
  LOOKUP will search through the SUSPEC.DO file, show you a word that could not
be found in the dictionary and give you several options: Add, Fix, Ignore, 
Replace, Word, Quit.

  ADD:  Pressing 'A' will place the word in the file ADDICT.DO so you can add 
it to your dictionary later.

  FIX:  Pressing 'F' will cause the program to lookup the word in the 
dictionary. If the proper dictionary file is not in the drive you will be asked
to install it. LOOKUP.BA looks for the word based on how the first half of the 
word is spelled. When it gets near, you are shown the word and given ten words 
from the dictionary. Pressing the number in front of the word will lead to a 
question: Replace BADWORD word with GOODWORD. Pressing 'Y' will replace it and 
return to look for the next word. Any other response will let you make a new 
choice. If you want to look at the next set of ten word press the SPACEBAR. If 
you don't want to look for the word any more press 'R' for reconsider, which 
will take you back to the first menu. Pressing SHIFT 'Q' quits to the main 
menu.

  IGNORE: Pressing 'I' will ignore the word and go on to lookup the next word.

  REPLACE: Pressing 'R' will replace the current word with a new word. After 
inputing the new word LOOKUP.BA will check the dictionary. If the new word can 
not be found in the dictionary you will be told so. You are then asked if you 
are sure you want to replace the old word with the new word. Pressing 'Y' will 
move on to the next word, any other response will return you to the first menu 
with the current word.

  WORD: Pressing 'W' will allow you to use the FIX option but with a new word 
or the first part of a word.

  QUIT: Pressing SHIFT 'Q' will return you to the main menu.

  When LOOKUP.BA has gone through the whole word list it will ask you to place 
the disk with the text file in the drive. It will then go through the disk file
and rewrite it to RAM making the corrections. The text will also be printed to 
the screen so you can keep an eye on your text file. The replaced words will be
shown in inverse to make the changes easy to spot.
 When LOOKUP.BA is finished, it will kill the disk copy and save the new 
version to the disk, you are then returned to the main menu.

  NOTES

  If you want to stop LOOKUP use the 'Q' funtion then go into the SUSPEC.DO 
file and 'CUT' the words you've already reviewed. Then when you come back you 
can start right where you left off.

  LOOKUP.BA works with lowercase when at all possable. It does make an attempt 
change the letters in the new words to uppercase when possible. It will do fine
on 99% of the text. Problems: If the word does not start with a capital ex: 
tEST = test, uppercase mixed with lowercase ex: TEsT = TEst. This was done 
because the word length is bound to change in a program like this. I don't feel
this will be a problem, but I'm open to suggestions.

  I would like to thank David W. Willman 75775,202 for SPLCHK.BA or else this 
program would not be necessary. I did use some of his code in LOOKUP.BA.

  If you have any problems or suggestion please send E-mail to me, as I may not
be on the sig for months at a time.

  FRED EDELKAMP
   70506,223

