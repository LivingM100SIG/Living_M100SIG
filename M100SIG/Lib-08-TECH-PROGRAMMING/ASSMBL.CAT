Library 8   ASSMBL.CAT


ADSM.100 [73327,1653] 29-Jul-88 8966
    Assembler/diassembler/monitor, written in machine language for Model
    100/102. Features external device access and conditional assembly. Read
    ADSM.DOC

ADSM1.SR1 [73577,3041] 17-Mar-90 6416
    2nd Generation ADSM Assembler/Disassembler/Monitor

ADSM1.SR2 [73577,3041] 17-Mar-90 12566
    2nd generation ADSM Assembler/Disassembler/monitor

ADSM1.SR3 [73577,3041] 17-Mar-90 10207
    2nd generation ADSM Assembler/Disassembler/Monitor

ADSMTR.100 [71266,125] 11-Apr-88 11161
    A Basic loader which will create ADSMTR.CO in your Model 100/102 (only!).
    Full documentation is to be found in ADSMTR.DOC (LIB10). This program is a
    full-featured assembler, disassembler and monitor for the100/102. Note
    that the cross-bank operation of the 200 version is not supported in this
    100/102 version.

ADSMTR.ASM [71266,125] 16-Apr-88 25465
    Source for the Model 100/102 version of James Yi's ADSMTR.200
    Uploaded for reference and archiving.  See ADSMTR.100 or ADSMTR.HEX

ADSMTR.HEX [71266,125] 11-Apr-88 8888
    An alternate way to create ADSMTR.CO in your Model 100/102 (only!). Use
    HXFER.100 (LIB7) to load this hex file. Full documentation is to be found
    in ADSMTR.DOC (LIB10). This program is a full-featured assembler,
    disassembler and monitor for the 100/102.

ASM.BA [72176,2507] 04-Jun-84 8695
    This file contains a Basic program for an 8085 assembler.
    See ASM.DOC, LDASM.BA, and ASMEX.TXT

ASM.DOC [72176,2507] 03-Jun-84 13050
    Documentation for ASM.BA

ASMCNV.BA [71706,334] 20-Dec-85 1630
    Source file convertor for assembly files, converts from form used by
    Custom Software to form used by Polar Engineering on model 100 and 200.
    Changes HL,DE,BC,AF register notation to H,D,B,PSW notation and converts
    DM macro to DB with a character string.

ASMEX.TXT [72176,2507] 03-Jun-84 890
    An example of some of the features of the 8085 assembler. Read in
    conjunction with this file: ASM.BA LDASM.BA ASM.DOC

ASMPC.ARC/binary [75715,70] 16-Sep-89 29184
    Assembler for 80C85-based laptops (Model 100, 102, 200) that runs on IBM
    PC and generates a .CO output file which can be loaded using M100CO.EXE.
    Allows 31-character labels, evaluates expressions, and includes a
    cross-reference in the listing file.   !!! WARNING !!!  This is a binary
    file, to be de-archived using one of the archiving utilities (in IBMSW?).
    Do not try to read--it will look like garbage!

ASSM.DOC [73125,616] 01-Jun-84 2920
    Documentation for ASSM.OBJ

ASSM.OBJ [73125,616] 01-Jun-84 11550
    OBJ. CODE FOR ASSEMBER. SAVED IN INTEL HEX FORMAT. ASSEMBLER LIVES AT
    E000 TO EFFF. STACK IS AT F200. SYMBOL TABLE IS D800 TO DFFF. USE
    HEXLDR.100 TO LOAD ASSEMBLER. CALL 57344 TO OPERATE

ASYNC.ASM [73216,1022] 18-Jan-85 855
    A short assembly language subroutine, callable from BASIC, that basically
    does exactly the same thing SOUND does. However, this program allows you
    to continue execution of your program (Asynchronous operation) while the
    sound is being produced. Uses the clock chip interrupt.

BASBLD.BA [71706,334] 20-Dec-85 1960
    A program to take a machine code file, and build a basic program, which
    when run, will generate the machine code file. Works on model 100/200,
    just give an address range, and name, and it writes a basic program, with
    line by line checksum to re-create the ml code.

BASBLD.NEW [71266,125] 04-Jul-87 3247
    A new version of BASBLD.REL. This operates identical to the original --
    but picks up the last byte of the M/L program and does not allow overwrite
    of MAXRAM. Pgm takes two copies of same M/L pgm at different addresses
    (not overlapping) and makes a relocating Basic loader.

BASBLD.PW3 [71266,125] 21-Aug-88 4966
    This version builds a relocatable Basic loader from two MENU copies of the
    same program, with differing loading addresses which can be such that they
    would overlap if they were loaded). The resulting loader must be written
    to an external device (0: with disk and OS; CAS: are most likely) and then
    reloaded.

BASBLD.RLN [75775,1430] 04-Jul-87 3116
    This program takes two copies (at different addresses), of a M/L program
    and builds a BASIC program which when run, will load the M/L program at a
    user input ending address. The loader created by this version clears
    necessary RAM automatically.

BIN-HX.BA [73327,1653] 13-Nov-87 1908
    Converts a .CO binary file into intel hex format text file and vice versa,
    for transferring the 8 bit binary file with TELCOM.

BIN-HX.DOC [73327,1653] 13-Nov-87 1836
    Instructions for BIN-HX.BA

BYTEIT.BA [75515,1651] 24-Apr-87 6798
    An 80c85 Assembler written in BASIC which uses standard Intel Mnemonics. 
    It supports a number of different data formats and psuedo-ops.

BYTEIT.DOC [75515,1651] 24-Apr-87 4740
    Documentation for BYTEIT.BA

CMZASM.BA [72757,3076] 09-Jul-87 11230
    Personal Assembler. Creates a BASIC program to load the machine language
    code into ANY memory location. Supports labels, ASCII strings, and HEX
    digits. See the document file for more info.

CMZASM.DOC [72757,3076] 27-Jun-87 5290
    Documentation for CMZASM.BA. Describes the limitations, use and general
    workings.

CO2BA.100 [75665,1045] 23-Apr-85 1085
    Converts a .CO file into a stand-alone BASIC program (stored as .DO) which
    can be used to recreate the .CO file, i.e. the Top, End, & Exe addresses,
    the file name, and all the bytes of the .CO are converted to DATA
    statements in the resulting basic file.

CO2BA.BA/binary [76670,326] 05-Nov-89 1536
    CO program to BA Loader conversion program

CO2HEX.100 [71036,1603] 29-Mar-86 1295
    Converts a .CO file to its Intel hex representation. It will properly
    generate checksums at the end of each line of data. See HEX2CO.DOC

CTAB.SRC [73125,616] 06-Jun-84 1750
    COMMAND TABLE & COMS COMMAND MODS FOR M/L ASSEMBLER. THESE MODS ARE
    ALREADY IN THE ASSEMBLER, BUT, THEY ARE PLACED HERE FOR 2 REASONS.
    FIRST, TO GIVE EXAMPLES OF WHAT THE SOURCE FOR THIS ASSEMBLER LOOKS LIKE.
    SECOND, IF YOU'RE LIKE ME, AND LIKE TO TINKER, THE MEMORY LOCATIONS FOR
    THE COMMANDS FOLLOW THE NAMES.

DEBUG.DOC [70536,253] 14-Nov-84 5330
    Instructions for DEBUGB.100

DEBUGB.100 [70536,253] 14-Nov-84 2940
    A tool to test, debug and evaluate machine language programs on the Model
    100. A machine language helper program is needed, DEBUGM.100 creates this.
    See DEBUG.DOC

DEBUGM.100 [70536,253] 14-Nov-84 4970
    Creates a machine language program to be used with DEBUGB.100

DEMO.REL [75665,1045] 06-Mar-84 4190
    A BASIC loading routine to place a machine-code demo program at any
    desired start/end address in RAM. A discussion of how & why we should
    design relocatable machine-code routines for the Model 100.

DISASM.100 [75655,1516] 22-Jul-84 2930
    Small, fast machine language disassembler that produces 8085 code, and can
    output to any legal device (LPT:, LCD:, COM:, RAM:, MDM:, etc). 
    Disassembles at about 4K/minute, producing long listings. See DISASM.DOC

DISASM.BAS [70465,203] 25-Nov-85 3825
    A *fast* disassembler that will send the disassembly to any valid file
    (CAS:, LCD: LPT: etc are all usable)

DISASM.CMZ [72757,3076] 29-Mar-86 3600
    A quick disassembler written in BASIC for the MODEL 100. Disassembles in
    DEC and HEX.

DISASM.DO2 [71266,125] 27-May-87(27-May-87) 1780
    Documentation for DISASM.PW2

DISASM.DO4 [71266,125] 16-Nov-87 4323
    Documentation for DISASM.PW4

DISASM.DOC [75655,1516] 22-Jul-84 2830
    Instructions for DISASM.100

DISASM.PW1 [71266,125] 09-Jan-87 3845
    This is my version of the program DISASM.BAS (LIB8). I use it extensively
    for M100 disassemblies, and it should work on the T200. Input addressed
    are in decimal, but output is in hex. Changes from original are cosmetic.

DISASM.PW2 [71266,125] 27-May-87 4692
    Disassembles CO files "in-place"; that is, where they are on the menu,
    without the need to load them to their running location. The main
    limitation is that the output cannot be to a RAM file (for that, load the
    CO file and use DISASM.PW1). See DISASM.DO2

DISASM.PW3 [71266,125] 17-Jul-87 4435
    A special disassembler to use in conjunction with the Custom Software
    assembler. First use DISASM.PW2 (LIB8/10) to disassemble the CO program
    from the menu. Then do it again with this program. This one will give you
    a version without line numbers -- to which you can add labels to make a
    CS assembler source file. For 100/102 and 200

DISASM.PW4 [71266,125] 15-Nov-87 4633
    A menu-file disassembler for use in creating a Custom Software assembler
    source file from a menu copy of a CO program. Set up for Model 100, but
    can be modified for Tandy 200. See DISASM.DO4

DISGKB.100 [70436,430] 17-Jan-84 4000
    Decimal disassembler for M100. Works via opcode analysis

EQU100.200 [71266,125] 17-Sep-87 2564
    Gives the T200 equates used in converting XMDPW2.ASM in LIB3 for use on
    the Tandy 200. Useful as a 100/200 translation reference.

FIXHOK.ZBG [70406,445] 26-Dec-86 595
    Repairs the hook table after exiting RS' M100 DEBUG/ASSEMBLER. Microsoft's
    "ZBGASM" messes up the hook table at FAE2, FAE4, FAFA and FB0A and doesn't
    fix it up when finished. Unless its fixed most any program that uses the
    table will bomb. The operating system accesses the table thru the RST 7
    instruction for most I/O so this flaw (zbug?) just about assures a bomb!

HELP.ASM [75765,374] 27-Oct-84 7800
    A short article that may be of interest to those wanting to learn assembly
    language. It is a general outline, but I'll be glad to try to answer
    specific questions via messages.

HEX2CO.100 [71036,1603] 29-Mar-86 1365
    Converts a machine language program in Intel hex format to a .CO file. It
    will set the start, end, and execute addresses properly according to data
    in the file. Checksums are properly tested for, and a checksum error will
    cause loading to terminate. See HEX2CO.DOC

HEX2CO.DOC [71036,1603] 29-Mar-86 1575
    Documentation for HEX2CO.100 and CO2HEX.100

HEXMAK.100 [75765,374] 27-Oct-84 800
    Peeks at a range of memory and stores the values in a text file. Use with
    LOADER.DO. See HELP.ASM

HOWCRC.DO [73327,1653] 13-Jul-89 2644
    Shows how to implement Xmodem CRC checking algorithm in assembly language
    for 8085 microprocessor.

LDASM.BA [72176,2507] 03-Jun-84 680
    Loads the object file output of the assembler into the memory of the Model
    100.Read in conjunction with this file: ASM.BA, ASM.DOC, ASMEX.TXT

LOADER.100 [75765,374] 27-Oct-84 750
    Pokes values from a text file into a .CO file. Text file can be created
    using HEXMAK.100. See HELP.ASM

M100.LIB [70205,1144] 13-Sep-83 2040
    MACLIB file for assembling model 100 programs with CP/M MAC assembler.

MLFILE.100 [71266,125] 18-Jun-88 5683
    Update and correction of MLFILE.DOC

OPCODE.DOC [72227,2416] 25-Jul-85 2785
    Contains explanations of the two undocumented flag bits & the ten
    undocumented opcodes in the Intel 8085/80C85 microprocessor (the Model
    100's CPU). Useful only to machine-language programmers.

OPTEST.DOC [76656,2526] 22-Mar-87 12958
    Docs for OPTEST.HEX

OPTEST.HEX [76656,2526] 22-Mar-87 2054
    A machine language program that tests the "illegal" 8085 op codes as
    executed by the Model 100. Extra bytes left for customization. You will
    need "DOCO.BA" from LIB7 to convert to machine code. "OPTEST.DOC" is a
    must have file to run this!! See OPCODE.DOC

POSIND.DOC [72227,2416] 23-Oct-85 6650
    For intermediate & advanced ML programmers, a comprehensive system for
    writing POSition-INDependent 8085 code. A cut-&-paste macro implementation
    for Polar's ROM2 assembler is given in full; the ideas can easily be
    adapted to any assembler.

PRINT.ASM [75765,374] 27-Oct-84 740
    Produces formatted printouts from an assembly code source text file.
    Designed for Custom Software's assembler format, it should work with any.

QBUG.BA [74756,413] 30-Aug-85 7385
    A simple debugging utility for assembly language program development.
    Provides manipulation of memory, registers, stack, breakpoints etc.
    See QBUG.DOC

QBUG.DOC [74756,413] 31-Aug-85 6910
    Documentation for QBUG.BA

SMALL.DIS [72346,1020] 01-May-85 1525
    A COMPACT (tiny) disassembler in BASIC for Model 100 or Tandy 200. It's
    only 1.3K long! Output to screen or printer or anything else (with slight
    mod). See SMALL.DOC

SMALL.DOC [72346,1020] 01-May-85 6635
    Documentation for SMALL.DIS

TASM.USE [71266,125] 16-Jan-88 6305
    This file gives advice on using TASM.EXE (TASM.ARC, IBMSW Forum, DL4) to
    cross-assemble Model 100/102/200 machine language programs. Data on
    conversion of Custom Software source files is given. Another note to add
    to those below: It appears that TASM creates OBJ files without a ^Z at the
    end. Beware when importing to the Model 100!

TASM80.TAB [71266,125] 24-Jan-88 5228
    An instruction set table for TASM which supports the 8085 with Z-80
    mnemonics. Note that this is NOT a true Z-80 instruction table, in that
    only the legal and documented 8085 instructions are supported. Uploaded
    for those who prefer Zilog Z-80 mnemonics. Invoke with: TASM -80 SOURCE.EXT

TASM85.TAB [71266,125] 16-Jan-88 8211
    An 8085 instruction set table for the TASM.EXE IBM-PC cross assembler
    found in TASM.ARC (IBMSW, DL4). This version has been edited to remove
    graphics characters from the one in the ARC file, and to make it Custom
    Software compatible. Note that the ASM must still be edited to get proper
    format for assembler directives, etc. See TASM.DOC in TASM.ARC

TCOMP.121 [72506,2072] 24-Jul-85 9765
    The THIRD generation of the TCOMP Tiny Basic Compiler. While not a full
    implementation of M100 Basic, the instruction set is powerful enough for
    many applications, especially games. Read TCOMP.DO3, TCOMP.DOC and
    TCOMP.DO2

TCOMP.DO2 [72506,2072] 25-Apr-85 3705
    A supplement to TCOMP.DOC describing the new features in TCOMP.110

TCOMP.DO3 [72506,2072] 24-Jul-85 2645
    Documentation for TCOMP.121. Read TCOMP.DOC and TCOMP.DO2, also

TCOMP.DO4 [74716,476] 04-Jun-86 5250
    Documentation for TCOMP.DVI

TCOMP.DOC [72506,2072] 03-Apr-85 5030
    Documentation of TCOMP Compiler

TCOMP.DVI [74716,476] 04-Jun-86 10715
    A modified version of TCOMP.121. Modifications allow the source file to
    remain on disk (DVI) while the compiler runs in RAM: Object file is
    created in memory then saved back to disk. Runs just like TCOMP.121.
    See TCOMP.DO4

TCOMP.FX1 [74716,476] 12-Jun-86 475
    Fix for TCOMP.DVI. Current version has an error in the error trap routine.
    This one line fix cures the problem.

TCOMP.TDD [74716,476] 12-Jun-86 5800
    This is how to modify TCOMP.DVI to work with the TDD. Instructions on
    how to perform the mod are included, complete with a checksummed merge
    file. REQUIRES POWR-Disk by Acroatix

TCOMPF.DOC [72575,1473] 22-Sep-85 2950
    Instructions for creating and using TCOMPF.CO --- see description under
    TCOMPF.LDR

TCOMPF.LDR [72575,1473] 22-Sep-85 3090
    A very fast and easy way to check Basic programs for keywords that
    TCOMP.121 doesn't compile. The self contained loader program creates
    TCOMPF.CO, which searches, locates, and lists lines containing unallowed
    keywords. It checked a 19K+ program in under three seconds! See TCOMPF.DOC

TUTORA.ASM [75765,374] 01-Nov-84 7560
    TUTURA.ASM through TUTORC.ASM contains the first draft of the first part
    of an assembly language tutorial. It is written as a supplement to an 8085
    book, and it assumes you already know Basic.

TUTORB.ASM [75765,374] 01-Nov-84 8430
    See TUTORA.ASM for description

TUTORC.ASM [75765,374] 01-Nov-84 9050
    See TUTORA.ASM for description

TUTORD.ASM [75765,374] 12-Nov-84 5965
    Assembly language tutorial part D

UNLOAD.100 [70205,1144] 22-Jun-84 1150
    converts .CO files into a pseudo INTEL hex format. the hex file can be
    loaded by the new version of HEXLDR. WARNING: do not try to use this with
    the old HEXLDR. it will poke your model 100 into oblivion.

XASMM1.EXE/binary [73407,436] 04-Apr-88 62208
    A MS-DOS to Tandy Model 100 Cross Assembler. With XASMM100.EXE you can
    create M100 assembly language programs on an MS-DOS desktop computer. A
    self-unarchiving file containing the program, documentation, and sample
    source listings

ZBGASM.TIP [70406,445] 26-Dec-86 970
    A forum for exchange of hints and fixes for the Radio Shack/Microsoft
    Assembler/Debugger, ZBGASM

ZBGTIP.001 [73300,2272] 13-Aug-87 2340
    Explains the use of the ROM routine at 27B1H in connection with printing
    ASCII strings inside a machine language program.
