
Documentation for SMARTT.100 and SMARTT.600 adapted from the program
 SMART.BAS by Steve Kelly published in "CodeWorks" magazine Jan/Feb 1987

Programs adapted for the Model 100 and Tandy 600 by David Dunn Thomas.


	SMART-TAC-TOE's operation as a straight game is perfectly simple and
easy to pick up on. In playing human versus computer, the human is X and is
prompted to MOVE. The number of choice is typed and ENTER is pressed. Note that
after each game the ENTER key needs to be pressed to notify the computer that
you, the human, still want to play. Thus, ENTER should be pressed at the
"You win" and "I won" type of statements.
	Playing in this manner the human will very shortly start to lose
rather regularly - ere long the computer will be unbeatable. Guaranteed!


	Whenever a human stops play for 45 seconds or so, then the computer
will commence to play automatically against it's random number generator, also
know as Dopus Maximus. Dopus becomes X and learns nothing, but the computer
will gradually learn from it's mistakes and start consistent winning. Normally
the computer will not learn as rapidly against Dopus as against a human.
	Play of computer (O) versus Dopus (X) may be interrupted and the human
may resume play by pressing ENTER and continuing as above.


	Answering the "Make your MOVE" prompt with "Q" or "q" will immediately
exit the game and return you to Menu/System with no saving of data or your
game information.

	NOTE: Due to large DIM(ensions), the game requires about 4K in addition
to the actual file size of the program.


   Data save/load:

	Upon initializing the program, you're asked if you wish to use the
data from Chipmunk/disk. Clearly the answer is "N" for first play. After play
for some time, even overnight or more, there is the option to save the data on
games played to disk. To do so, press "D" at the "Make your MOVE" prompt and
the statistics will be saved to DATAC.TX (Chipmunk) or DATATAC.TXT (600). After
the file is saved, play will be resumed until "Q" is entered at the "Make your
MOVE" prompt.
	Once having saved the data, upon next use it may be reloaded and play
resumed where it left off merely by answering the initial "Use data ..." query
with a "Y" instead of "N".
	Note that the game may be played without use of disk save/load at all.
Likewise, it is a simple matter to modify the program to save/load to/from
other peripherals using different syntax. Edit lines 140 and 370 in order to
save the file to some other device. DATAC.TX could be saved to RAM, but be
advised that the file size starts at 11K; with 2,630 games played the file
size was close to 13K and growing.


   Artificial Intelligence:

	Saving of data serves two purposes. For most of us it is simply to be
able to resume play with the same level of computer expertise as before.
In this respect, note that the number "Level of play" reports the number of
IDENTICAL games played, of which there are 1023 possibilities. The more games
that are played, the greater the disparity between "played" and "level"; with
2,667 games played as I type this, Mortimer's "Level" is at 314.

	For another sector of the community, and our own thinking, the data
collected may be used for analysis with respect to the "AI" of our computers.
As a subject totally beyond me, I'll refer all to "CodeWorks" Issue 9 of
January/February 1987. Therein will be found five pages of discussion of the
program, it's coding, and the Artificial Intelligence thereof.


Notes by David Dunn Thomas 70526,1117
27-Jan-87


For further details, contact:
CodeWorks
3838 S. Warner Street
Tacoma, WA 98409
(206) 475-2219 (voice)
(206) 475-2356 (modem download)
